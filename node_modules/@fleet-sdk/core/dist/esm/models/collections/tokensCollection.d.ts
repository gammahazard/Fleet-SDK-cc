import { Amount, OneOrMore, TokenAmount, TokenId } from "@fleet-sdk/common";
import { Collection, CollectionAddOptions } from "./collection";
export declare const MAX_TOKENS_PER_BOX = 120;
export type TokenAddOptions = CollectionAddOptions & {
    sum?: boolean;
};
export declare class TokensCollection extends Collection<TokenAmount<bigint>, TokenAmount<Amount>> {
    constructor();
    constructor(token: TokenAmount<Amount>);
    constructor(tokens: TokenAmount<Amount>[]);
    constructor(tokens: TokenAmount<Amount>[], options: TokenAddOptions);
    protected _map(token: TokenAmount<bigint> | TokenAmount<Amount>): TokenAmount<bigint>;
    protected _addOne(token: TokenAmount<bigint> | TokenAmount<Amount>, options?: TokenAddOptions): number;
    add(items: OneOrMore<TokenAmount<Amount>>, options?: TokenAddOptions): number;
    private _sum;
    remove(tokenId: TokenId, amount?: Amount): number;
    remove(index: number, amount?: Amount): number;
    contains(tokenId: string): boolean;
}
