import { OneOrMore } from "@fleet-sdk/common";
export type CollectionAddOptions = {
    index?: number;
};
export declare abstract class Collection<InternalType, ExternalType> implements Iterable<InternalType> {
    protected readonly _items: InternalType[];
    constructor();
    protected _isIndexOutOfBounds(index: number): boolean;
    [Symbol.iterator](): Iterator<InternalType>;
    get length(): number;
    get isEmpty(): boolean;
    at(index: number): InternalType;
    add(items: OneOrMore<ExternalType>, options?: CollectionAddOptions): number;
    abstract remove(item: unknown): number;
    protected abstract _map(item: ExternalType | InternalType): InternalType;
    protected _addOne(item: InternalType | ExternalType, options?: CollectionAddOptions): number;
    protected _addOneOrMore(items: OneOrMore<ExternalType>, options?: CollectionAddOptions): number;
    toArray(): InternalType[];
}
