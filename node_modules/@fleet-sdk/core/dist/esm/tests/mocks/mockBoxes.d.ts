import { Amount, Box } from "@fleet-sdk/common";
export declare const regularBoxesMock: Box<bigint>[];
export declare const manyTokensBoxesMock: Box<Amount>[];
export declare const validBoxesMock: ({
    boxId: string;
    transactionId: string;
    value: string;
    creationHeight: number;
    settlementHeight: number;
    index: number;
    ergoTree: string;
    address: string;
    additionalRegisters: {
        R4?: undefined;
        R5?: undefined;
        R6?: undefined;
    };
    assets: {
        tokenId: string;
        amount: string;
    }[];
    confirmed: boolean;
} | {
    boxId: string;
    transactionId: string;
    value: string;
    creationHeight: number;
    settlementHeight: number;
    index: number;
    ergoTree: string;
    address: string;
    additionalRegisters: {
        R4?: undefined;
        R5?: undefined;
        R6?: undefined;
    };
    assets: {
        tokenId: string;
        amount: string;
    }[];
    confirmed?: undefined;
} | {
    boxId: string;
    transactionId: string;
    value: bigint;
    index: number;
    creationHeight: number;
    ergoTree: string;
    address: string;
    assets: {
        tokenId: string;
        amount: bigint;
    }[];
    additionalRegisters: {
        R4: string;
        R5: string;
        R6: string;
    };
    settlementHeight?: undefined;
    confirmed?: undefined;
})[];
export declare const invalidBoxesMock: ({
    boxId: string;
    transactionId: string;
    value: string;
    creationHeight: number;
    settlementHeight: number;
    index: number;
    ergoTree: string;
    address: string;
    additionalRegisters: {
        R4?: undefined;
        R5?: undefined;
        R6?: undefined;
    };
    assets: {
        tokenId: string;
        amount: string;
    }[];
    confirmed: boolean;
} | {
    boxId: string;
    transactionId: string;
    value: string;
    creationHeight: number;
    settlementHeight: number;
    index: number;
    ergoTree: string;
    address: string;
    additionalRegisters: {
        R4?: undefined;
        R5?: undefined;
        R6?: undefined;
    };
    assets: {
        tokenId: string;
        amount: string;
    }[];
    confirmed?: undefined;
} | {
    boxId: string;
    transactionId: string;
    value: bigint;
    index: number;
    creationHeight: number;
    ergoTree: string;
    address: string;
    assets: {
        tokenId: string;
        amount: bigint;
    }[];
    additionalRegisters: {
        R4: string;
        R5: string;
        R6: string;
    };
    settlementHeight?: undefined;
    confirmed?: undefined;
})[];
export declare const outOfOrderRegistersBox: {
    boxId: string;
    value: string;
    ergoTree: string;
    assets: {
        tokenId: string;
        amount: string;
    }[];
    additionalRegisters: {
        R5: string;
        R6: string;
        R4: string;
        R8: string;
        R7: string;
    };
    creationHeight: number;
    transactionId: string;
    index: number;
};
