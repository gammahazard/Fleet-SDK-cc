"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeBox = void 0;
const common_1 = require("@fleet-sdk/common");
const utils_1 = require("@noble/hashes/utils");
const vlq_1 = require("../vlq");
function serializeBox(box) {
    return (0, utils_1.concatBytes)((0, vlq_1.vqlEncodeBigInt)((0, common_1.ensureBigInt)(box.value)), (0, utils_1.hexToBytes)(box.ergoTree), (0, vlq_1.vlqEncode)(box.creationHeight), serializeTokens(box.assets), serializeRegisters(box.additionalRegisters), (0, utils_1.hexToBytes)(box.transactionId), (0, vlq_1.vlqEncode)(box.index));
}
exports.serializeBox = serializeBox;
function serializeTokens(tokens) {
    if ((0, common_1.isEmpty)(tokens)) {
        return Uint8Array.from([0]);
    }
    return (0, utils_1.concatBytes)((0, vlq_1.vlqEncode)(tokens.length), ...tokens.map((asset) => (0, utils_1.concatBytes)((0, utils_1.hexToBytes)(asset.tokenId), (0, vlq_1.vqlEncodeBigInt)((0, common_1.ensureBigInt)(asset.amount)))));
}
function serializeRegisters(registers) {
    let keys = Object.keys(registers);
    if ((0, common_1.isEmpty)(keys)) {
        return Uint8Array.from([0]);
    }
    const serializedRegisters = [];
    keys = keys.sort();
    for (const key of keys) {
        const val = registers[key];
        if ((0, common_1.isDefined)(val)) {
            serializedRegisters.push((0, utils_1.hexToBytes)(val));
        }
    }
    return (0, utils_1.concatBytes)((0, vlq_1.vlqEncode)(serializedRegisters.length), (0, utils_1.concatBytes)(...serializedRegisters));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94U2VyaWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJpYWxpemVyL3NpZ21hL2JveFNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsOENBQXFFO0FBQ3JFLCtDQUE4RDtBQUU5RCxnQ0FBb0Q7QUFFcEQsU0FBZ0IsWUFBWSxDQUFDLEdBQTBCO0lBQ3JELE9BQU8sSUFBQSxtQkFBVyxFQUNoQixJQUFBLHFCQUFlLEVBQUMsSUFBQSxxQkFBWSxFQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUN4QyxJQUFBLGtCQUFVLEVBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUN4QixJQUFBLGVBQVMsRUFBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEVBQzdCLGVBQWUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQzNCLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxFQUMzQyxJQUFBLGtCQUFVLEVBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUM3QixJQUFBLGVBQVMsRUFBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQ3JCLENBQUM7QUFDSixDQUFDO0FBVkQsb0NBVUM7QUFFRCxTQUFTLGVBQWUsQ0FBQyxNQUE2QjtJQUNwRCxJQUFJLElBQUEsZ0JBQU8sRUFBQyxNQUFNLENBQUMsRUFBRTtRQUNuQixPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdCO0lBRUQsT0FBTyxJQUFBLG1CQUFXLEVBQ2hCLElBQUEsZUFBUyxFQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFDeEIsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FDdEIsSUFBQSxtQkFBVyxFQUFDLElBQUEsa0JBQVUsRUFBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBQSxxQkFBZSxFQUFDLElBQUEscUJBQVksRUFBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUNwRixDQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsU0FBUyxrQkFBa0IsQ0FBQyxTQUFnQztJQUMxRCxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2xDLElBQUksSUFBQSxnQkFBTyxFQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDN0I7SUFFRCxNQUFNLG1CQUFtQixHQUFpQixFQUFFLENBQUM7SUFDN0MsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRTtRQUN0QixNQUFNLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBa0MsQ0FBQyxDQUFDO1FBQzFELElBQUksSUFBQSxrQkFBUyxFQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFBLGtCQUFVLEVBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMzQztLQUNGO0lBRUQsT0FBTyxJQUFBLG1CQUFXLEVBQUMsSUFBQSxlQUFTLEVBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBQSxtQkFBVyxFQUFDLEdBQUcsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQ2pHLENBQUMifQ==