"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputBuilder = exports.SAFE_MIN_BOX_VALUE = void 0;
const common_1 = require("@fleet-sdk/common");
const common_2 = require("@fleet-sdk/common");
const base_1 = require("@scure/base");
const invalidRegistersPacking_1 = require("../errors/invalidRegistersPacking");
const undefinedCreationHeight_1 = require("../errors/undefinedCreationHeight");
const undefinedMintingContext_1 = require("../errors/undefinedMintingContext");
const models_1 = require("../models");
const tokensCollection_1 = require("../models/collections/tokensCollection");
const constantSerializer_1 = require("../serializer/sigma/constantSerializer");
const sigmaTypes_1 = require("../serializer/sigma/sigmaTypes");
exports.SAFE_MIN_BOX_VALUE = BigInt(1000000);
class OutputBuilder {
    _value;
    _address;
    _tokens;
    _creationHeight;
    _registers;
    _minting;
    constructor(value, recipient, creationHeight) {
        this._value = (0, common_2.ensureBigInt)(value);
        this._creationHeight = creationHeight;
        this._tokens = new tokensCollection_1.TokensCollection();
        this._registers = {};
        if (this._value <= common_1._0n) {
            throw new Error("An UTxO cannot be created without a minimum required amount.");
        }
        if (typeof recipient === "string") {
            this._address = (0, common_2.isHex)(recipient)
                ? models_1.ErgoAddress.fromErgoTree(recipient)
                : models_1.ErgoAddress.fromBase58(recipient);
        }
        else {
            this._address = recipient;
        }
    }
    get value() {
        return this._value;
    }
    get address() {
        return this._address;
    }
    get ergoTree() {
        return this._address.ergoTree;
    }
    get creationHeight() {
        return this._creationHeight;
    }
    get tokens() {
        return this._tokens;
    }
    get additionalRegisters() {
        return this._registers;
    }
    get minting() {
        return this._minting;
    }
    addTokens(tokens, options) {
        if (tokens instanceof tokensCollection_1.TokensCollection) {
            this._tokens.add(tokens.toArray(), options);
        }
        else {
            this._tokens.add(tokens, options);
        }
        return this;
    }
    mintToken(token) {
        this._minting = { ...token, amount: (0, common_2.ensureBigInt)(token.amount) };
        return this;
    }
    setCreationHeight(height, options) {
        if ((0, common_2.isUndefined)(options) ||
            options.replace === true ||
            (options.replace === false && (0, common_2.isUndefined)(this._creationHeight))) {
            this._creationHeight = height;
        }
        return this;
    }
    setAdditionalRegisters(registers) {
        this._registers = (0, common_2.removeUndefined)(registers);
        if (!(0, common_2.areRegistersDenselyPacked)(registers)) {
            throw new invalidRegistersPacking_1.InvalidRegistersPacking();
        }
        return this;
    }
    eject(ejector) {
        ejector({ tokens: this._tokens });
        return this;
    }
    build(transactionInputs) {
        let tokens = this.tokens.toArray();
        if (this.minting) {
            if ((0, common_2.isEmpty)(transactionInputs)) {
                throw new undefinedMintingContext_1.UndefinedMintingContext();
            }
            if ((0, common_2.isEmpty)(this.additionalRegisters)) {
                this.setAdditionalRegisters({
                    R4: (0, constantSerializer_1.SConstant)((0, sigmaTypes_1.SColl)(sigmaTypes_1.SByte, (0, base_1.stringToBytes)("utf8", this.minting.name || ""))),
                    R5: (0, constantSerializer_1.SConstant)((0, sigmaTypes_1.SColl)(sigmaTypes_1.SByte, (0, base_1.stringToBytes)("utf8", this.minting.description || ""))),
                    R6: (0, constantSerializer_1.SConstant)((0, sigmaTypes_1.SColl)(sigmaTypes_1.SByte, (0, base_1.stringToBytes)("utf8", this.minting.decimals?.toString() || "0")))
                });
            }
            tokens = [
                {
                    tokenId: (0, common_2.first)(transactionInputs).boxId,
                    amount: this.minting.amount
                },
                ...tokens
            ];
        }
        if ((0, common_2.isUndefined)(this.creationHeight)) {
            throw new undefinedCreationHeight_1.UndefinedCreationHeight();
        }
        return {
            value: this.value.toString(),
            ergoTree: this.ergoTree,
            creationHeight: this.creationHeight,
            assets: tokens.map((token) => {
                return {
                    tokenId: token.tokenId,
                    amount: token.amount.toString()
                };
            }),
            additionalRegisters: this.additionalRegisters
        };
    }
}
exports.OutputBuilder = OutputBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0QnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idWlsZGVyL291dHB1dEJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBWTJCO0FBQzNCLDhDQVEyQjtBQUMzQixzQ0FBNEM7QUFDNUMsK0VBQTRFO0FBQzVFLCtFQUE0RTtBQUM1RSwrRUFBNEU7QUFDNUUsc0NBQXdDO0FBQ3hDLDZFQUEyRjtBQUMzRiwrRUFBbUU7QUFDbkUsK0RBQThEO0FBRWpELFFBQUEsa0JBQWtCLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBRWxELE1BQWEsYUFBYTtJQUNQLE1BQU0sQ0FBUztJQUNmLFFBQVEsQ0FBYztJQUN0QixPQUFPLENBQW1CO0lBQ25DLGVBQWUsQ0FBVTtJQUN6QixVQUFVLENBQXdCO0lBQ2xDLFFBQVEsQ0FBb0I7SUFFcEMsWUFDRSxLQUFhLEVBQ2IsU0FBZ0QsRUFDaEQsY0FBdUI7UUFFdkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFBLHFCQUFZLEVBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7UUFDdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLG1DQUFnQixFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFFckIsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLFlBQUcsRUFBRTtZQUN0QixNQUFNLElBQUksS0FBSyxDQUFDLDhEQUE4RCxDQUFDLENBQUM7U0FDakY7UUFFRCxJQUFJLE9BQU8sU0FBUyxLQUFLLFFBQVEsRUFBRTtZQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUEsY0FBSyxFQUFDLFNBQVMsQ0FBQztnQkFDOUIsQ0FBQyxDQUFDLG9CQUFXLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztnQkFDckMsQ0FBQyxDQUFDLG9CQUFXLENBQUMsVUFBVSxDQUFD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