import { Amount, Box, BuildOutputType, ContextExtension, DataInput, EIP12UnsignedDataInput, EIP12UnsignedInput, UnsignedInput } from "@fleet-sdk/common";
import { ErgoBox } from "./ergoBox";
type InputType<T> = T extends "default" ? UnsignedInput : EIP12UnsignedInput;
type DataInputType<T> = T extends "default" ? DataInput : EIP12UnsignedDataInput;
export declare class ErgoUnsignedInput extends ErgoBox {
    private _extension?;
    get extension(): ContextExtension | undefined;
    constructor(box: Box<Amount>);
    setContextVars(extension: ContextExtension): ErgoUnsignedInput;
    toUnsignedInputObject<T extends BuildOutputType>(type: T): InputType<T>;
    toObject<T extends BuildOutputType>(type: T): DataInputType<T>;
}
export {};
