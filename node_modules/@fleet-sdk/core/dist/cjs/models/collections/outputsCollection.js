"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputsCollection = void 0;
const common_1 = require("@fleet-sdk/common");
const errors_1 = require("../../errors");
const collection_1 = require("./collection");
class OutputsCollection extends collection_1.Collection {
    constructor(outputs) {
        super();
        if ((0, common_1.isDefined)(outputs)) {
            this.add(outputs);
        }
    }
    _map(output) {
        return output;
    }
    remove(outputs) {
        let index = -1;
        if (typeof outputs === "number") {
            if (this._isIndexOutOfBounds(outputs)) {
                throw new RangeError(`Index '${outputs}' is out of range.`);
            }
            index = outputs;
        }
        else {
            index = this._items.lastIndexOf(outputs);
            if (this._isIndexOutOfBounds(index)) {
                throw new errors_1.NotFoundError("The output you are trying to remove is not present in the outputs collection.");
            }
        }
        if (index > -1) {
            this._items.splice(index, 1);
        }
        return this.length;
    }
    clone() {
        return new OutputsCollection(this._items);
    }
    sum(basis) {
        const tokens = {};
        let nanoErgs = common_1._0n;
        if (basis) {
            if (basis.nanoErgs) {
                nanoErgs = basis.nanoErgs;
            }
            if ((0, common_1.some)(basis.tokens)) {
                for (const token of basis.tokens) {
                    if ((0, common_1.isUndefined)(token.amount)) {
                        continue;
                    }
                    tokens[token.tokenId] = (tokens[token.tokenId] || common_1._0n) + token.amount;
                }
            }
        }
        for (const box of this._items) {
            nanoErgs += box.value;
            for (const token of box.tokens) {
                tokens[token.tokenId] = (tokens[token.tokenId] || common_1._0n) + token.amount;
            }
        }
        return {
            nanoErgs,
            tokens: Object.keys(tokens).map((tokenId) => ({ tokenId, amount: tokens[tokenId] }))
        };
    }
}
exports.OutputsCollection = OutputsCollection;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0c0NvbGxlY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kZWxzL2NvbGxlY3Rpb25zL291dHB1dHNDb2xsZWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE2RjtBQUc3Rix5Q0FBNkM7QUFDN0MsNkNBQTBDO0FBRTFDLE1BQWEsaUJBQWtCLFNBQVEsdUJBQXdDO0lBQzdFLFlBQVksT0FBa0M7UUFDNUMsS0FBSyxFQUFFLENBQUM7UUFFUixJQUFJLElBQUEsa0JBQVMsRUFBQyxPQUFPLENBQUMsRUFBRTtZQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25CO0lBQ0gsQ0FBQztJQUVTLElBQUksQ0FBQyxNQUFxQjtRQUNsQyxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBSU0sTUFBTSxDQUFDLE9BQStCO1FBQzNDLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7WUFDL0IsSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ3JDLE1BQU0sSUFBSSxVQUFVLENBQUMsVUFBVSxPQUFPLG9CQUFvQixDQUFDLENBQUM7YUFDN0Q7WUFFRCxLQUFLLEdBQUcsT0FBTyxDQUFDO1NBQ2pCO2FBQU07WUFDTCxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFekMsSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ25DLE1BQU0sSUFBSSxzQkFBYSxDQUNyQiwrRUFBK0UsQ0FDaEYsQ0FBQzthQUNIO1NBQ0Y7UUFFRCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRTtZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM5QjtRQUVELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU0sS0FBSztRQUNWLE9BQU8sSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVNLEdBQUcsQ0FBQyxLQUFvQztRQUM3QyxNQUFNLE1BQU0sR0FBa0MsRUFBRSxDQUFDO1FBQ2pELElBQUksUUFBUSxHQUFHLFlBQUcsQ0FBQztRQUVuQixJQUFJLEtBQUssRUFBRTtZQUNULElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtnQkFDbEIsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7YUFDM0I7WUFFRCxJQUFJLElBQUEsYUFBSSxFQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDdEIsS0FBSyxNQUFNLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO29CQUNoQyxJQUFJLElBQUEsb0JBQVcsRUFBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7d0JBQzdCLFNBQVM7cUJBQ1Y7b0JBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksWUFBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztpQkFDdkU7YUFDRjtTQUNGO1FBRUQsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQzdCLFFBQVEsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3RCLEtBQUssTUFBTSxLQUFLLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtnQkFDOUIsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksWUFBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQzthQUN2RTtTQUNGO1FBRUQsT0FBTztZQUNMLFFBQVE7WUFDUixNQUFNLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDckYsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQTVFRCw4Q0E0RUMifQ==