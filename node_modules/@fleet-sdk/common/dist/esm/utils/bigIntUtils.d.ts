import { Amount } from "../types";
type NumberLike = string | number | bigint | boolean;
export declare function ensureBigInt(number: NumberLike): bigint;
type ParsingOptions = {
    /**
     * Number of decimals.
     */
    decimals?: number;
    /**
     * Thousand mark char.
     * Default: `.`
     */
    decimalMark?: string;
};
export declare function undecimalize(decimalStr: string, options?: ParsingOptions | number): bigint;
type FormattingOptions = {
    /**
     * Number of decimals.
     */
    decimals: number;
    /**
     * Thousand mark char.
     */
    thousandMark?: string;
    /**
     * Decimal mark char.
     * Default: `.`
     */
    decimalMark?: string;
};
export declare function decimalize(value: Amount, options?: FormattingOptions | number): string;
export declare function sumBy<T>(collection: T[], iteratee: (value: T) => bigint, condition?: (value: T) => boolean): bigint;
export {};
