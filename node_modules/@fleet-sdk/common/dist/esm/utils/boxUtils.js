import { _0n } from "./bigIntLiterals";
import { ensureBigInt } from "./bigIntUtils";
import { isDefined, isUndefined } from "./objectUtils";
const NANOERGS_TOKEN_ID = "nanoErgs";
export function utxoSum(boxes, tokenId) {
    const balances = {};
    for (const box of boxes) {
        if (isUndefined(tokenId) || tokenId === NANOERGS_TOKEN_ID) {
            balances[NANOERGS_TOKEN_ID] = (balances[NANOERGS_TOKEN_ID] || _0n) + ensureBigInt(box.value);
        }
        if (tokenId !== NANOERGS_TOKEN_ID) {
            for (const token of box.assets) {
                if (isDefined(tokenId) && tokenId !== token.tokenId) {
                    continue;
                }
                balances[token.tokenId] = (balances[token.tokenId] || _0n) + ensureBigInt(token.amount);
            }
        }
    }
    if (isDefined(tokenId)) {
        return balances[tokenId] || _0n;
    }
    return {
        nanoErgs: balances[NANOERGS_TOKEN_ID],
        tokens: Object.keys(balances)
            .filter((x) => x !== NANOERGS_TOKEN_ID)
            .map((tokenId) => ({ tokenId, amount: balances[tokenId] }))
    };
}
const MIN_REGISTER_NUMBER = 4;
const MAX_REGISTER_NUMBER = 9;
export function areRegistersDenselyPacked(registers) {
    let lastValueIndex = 0;
    for (let i = MIN_REGISTER_NUMBER; i <= MAX_REGISTER_NUMBER; i++) {
        if (registers[`R${i}`]) {
            if (i === MIN_REGISTER_NUMBER) {
                lastValueIndex = i;
                continue;
            }
            if (i - lastValueIndex > 1) {
                return false;
            }
            lastValueIndex = i;
        }
    }
    return true;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94VXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvYm94VXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkQsTUFBTSxpQkFBaUIsR0FBRyxVQUFVLENBQUM7QUFJckMsTUFBTSxVQUFVLE9BQU8sQ0FBQyxLQUErQixFQUFFLE9BQWlCO0lBQ3hFLE1BQU0sUUFBUSxHQUFrQyxFQUFFLENBQUM7SUFFbkQsS0FBSyxNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQUU7UUFDdkIsSUFBSSxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksT0FBTyxLQUFLLGlCQUFpQixFQUFFO1lBQ3pELFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM5RjtRQUVELElBQUksT0FBTyxLQUFLLGlCQUFpQixFQUFFO1lBQ2pDLEtBQUssTUFBTSxLQUFLLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtnQkFDOUIsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksT0FBTyxLQUFLLEtBQUssQ0FBQyxPQUFPLEVBQUU7b0JBQ25ELFNBQVM7aUJBQ1Y7Z0JBRUQsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN6RjtTQUNGO0tBQ0Y7SUFFRCxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUN0QixPQUFPLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLENBQUM7S0FDakM7SUFFRCxPQUFPO1FBQ0wsUUFBUSxFQUFFLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQztRQUNyQyxNQUFNLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDMUIsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssaUJBQWlCLENBQUM7YUFDdEMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQzlELENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFDOUIsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFFOUIsTUFBTSxVQUFVLHlCQUF5QixDQUFDLFNBQWdDO0lBQ3hFLElBQUksY0FBYyxHQUFHLENBQUMsQ0FBQztJQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLG1CQUFtQixFQUFFLENBQUMsSUFBSSxtQkFBbUIsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMvRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBaUMsQ0FBQyxFQUFFO1lBQ3JELElBQUksQ0FBQyxLQUFLLG1CQUFtQixFQUFFO2dCQUM3QixjQUFjLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixTQUFTO2FBQ1Y7WUFFRCxJQUFJLENBQUMsR0FBRyxjQUFjLEdBQUcsQ0FBQyxFQUFFO2dCQUMxQixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsY0FBYyxHQUFHLENBQUMsQ0FBQztTQUNwQjtLQUNGO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDIn0=